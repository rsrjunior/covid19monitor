{"version":3,"sources":["index.js"],"names":["Covid19Monitor","props","state","error","isLoaded","selected_countries","available_countries","grid_class","selectCountryRef","React","createRef","handleInputCountry","bind","country","this","find","x","selectedCountries","filter","gridClass","length","setState","fetch","then","response","json","data","errors","results","Error","catch","err","e","sel","current","addCountry","options","selectedIndex","value","slice","concat","addCountryDiv","className","countryDiv","map","key","History","handleCloseCountry","ref","id","item","onClick","Component","stats","timestamp","history","push","fetchDay","Date","time","substring","i","setDate","getDate","newData","day","toISOString","reverse","message","name","total","cases","active","recovered","deaths","critical","renderLineChart","minHeight","minWidth","aspect","width","margin","top","right","left","bottom","type","dataKey","stroke","strokeDasharray","tickFormatter","tick","Intl","NumberFormat","notation","compactDisplay","format","style","textAlign","href","toUTCString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a39c3e5.chunk.js","sourcesContent":["import 'purecss/build/pure-min.css';\nimport 'purecss/build/grids-responsive-min.css';\nimport './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n\n\nclass Covid19Monitor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      selected_countries: [\"All\"],\n      available_countries: [],\n      grid_class: \"pure-u-1\"\n    }\n    this.selectCountryRef = React.createRef();\n    this.handleInputCountry = this.handleInputCountry.bind(this);\n  }\n\n  handleCloseCountry(country) {\n    let removeCountry = this.state.selected_countries.find((x) => x === country);\n    if (removeCountry) {\n      let selectedCountries = this.state.selected_countries.filter((x) => x !== country);\n      let gridClass = this.state.grid_class;\n      if (selectedCountries.length >= 3) {\n        gridClass = \"pure-u-1 pure-u-md-1-2 pure-u-lg-1-3\";\n      } else if (selectedCountries.length === 2) {\n        gridClass = \"pure-u-1 pure-u-md-1-2\";\n      }else if(selectedCountries.length === 1){\n        gridClass = \"pure-u-1\"\n      }\n      this.setState({\n        selected_countries: selectedCountries,\n        grid_class: gridClass\n      });\n    };\n  }\n\n  componentDidMount() {\n    //console.log(\"Covid19Monitor componentDidMount. I am fetching the API for https://covid-193.p.rapidapi.com/countries\");\n    //fetch available countries\n    fetch(\"https://covid-193.p.rapidapi.com/countries\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"c3414d2c8dmshad47f98658f598fp1b458djsn9eb932b014d0\"\n      }\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        let error;\n        if (data.errors)\n          error = data.errors[0]\n        else if (!data.results)\n          error = new Error(\"No data found\");\n        this.setState(\n          {\n            isLoaded: true,\n            available_countries: data.results ? data.response : null,\n            error: error\n          }\n        );\n      })\n      .catch(err => {\n        this.setState(\n          {\n            isLoaded: true,\n            error: err\n          });\n      });\n  }\n\n  handleInputCountry(e) {\n    let sel = this.selectCountryRef.current;\n    let addCountry = sel.options[sel.selectedIndex].value;\n\n    if (addCountry\n      && !this.state.selected_countries.find((x) => x === addCountry)) {\n\n      let selectedCountries = this.state.selected_countries.slice().concat(addCountry);\n      let gridClass = this.state.grid_class;\n      if (selectedCountries.length >= 3) {\n        gridClass = \"pure-u-1 pure-u-md-1-2 pure-u-lg-1-3\";\n      } else if (selectedCountries.length === 2) {\n        gridClass = \"pure-u-1 pure-u-md-1-2\";\n      }\n      this.setState({\n        selected_countries: selectedCountries,\n        grid_class: gridClass\n      });\n    }\n  }\n\n  render() {\n    const selectedCountries = this.state.selected_countries;\n    const gridClass = this.state.grid_class;\n    let addCountryDiv = <div className=\"box box-addcountry\">Loading countries...</div>;\n\n\n    const countryDiv =\n      selectedCountries.map((country) => {\n        return <div key={country + \"Div\"} className={gridClass}>\n          <History key={country + \"History\"} country={country} handleCloseCountry={(x) => this.handleCloseCountry(x)} />\n        </div>;\n      });\n\n    if (this.state.isLoaded) {\n      if (this.state.error) {\n        addCountryDiv =\n          <div className={gridClass}>\n            <div className=\"box box-addcountry\">Error while loading available countries: {this.state.error}</div>\n          </div>\n      } else {\n        addCountryDiv =\n          <div className={gridClass}>\n            <div className=\"box box-addcountry\">\n              <h2>Add to Monitor</h2>\n              <select ref={this.selectCountryRef} id=\"countrySelector\">\n                {this.state.available_countries.map((item, key) => <option key={key} value={item}>{item}</option>)}\n              </select>\n              <br />\n              <button className=\"pure-button button-addcountry\" onClick={this.handleInputCountry}>Add</button>\n            </div>\n          </div>\n      }\n    }\n\n\n    return (\n      <div>\n        <header>Covid-19 Monitor</header>\n        <div className=\"pure-g\">\n          {countryDiv}\n          {addCountryDiv}\n        </div>\n\n      </div>\n    );\n  }\n}\nclass History extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      stats: null,\n      timestamp: null\n    }\n  }\n\n  componentDidMount() {\n    //console.log(`History componentDidMount. I am fetching the API for ${this.props.country}`);\n    fetch(`https://covid-193.p.rapidapi.com/history?country=${this.props.country}`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"c3414d2c8dmshad47f98658f598fp1b458djsn9eb932b014d0\"\n      }\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        let history = [];\n        if (data.results) {\n          history.push(data.response[0]);\n\n          let fetchDay = new Date(data.response[0].time.substring(0, 10));\n\n          for (let i = 1; i < 30; i++) {\n            fetchDay.setDate(fetchDay.getDate() - 1);\n            let newData = data.response.find(x => x.day === fetchDay.toISOString().substring(0, 10));\n            if (newData)\n              history.push(newData);\n          }\n\n          history.reverse();\n\n        }\n        this.setState(\n          {\n            isLoaded: true,\n            stats: history,\n            error: data.results ? null : new Error(\"No data found\"),\n            timestamp: data.results ? data.response[0].time : null\n          }\n        );\n      })\n      .catch(err => {\n        this.setState(\n          {\n            isLoaded: true,\n            error: err\n          });\n      });\n  }\n\n  render() {\n    const { error, isLoaded, stats, timestamp } = this.state;\n\n    if (error) {\n      return <div className=\"box box-history\">Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div className=\"box box-history\">Loading...</div>;\n    } else {\n      let history = [...stats];\n      let data = history.map(x => {\n        return {\n          name: x.day,\n          total: x.cases.total,\n          active: x.cases.active,\n          recovered: x.cases.recovered,\n          deaths: x.deaths.total,\n          critical: x.cases.critical\n        }\n      });\n      let renderLineChart = (\n        // <div style={{ width: '100%', height: 300, maxWidth: 600 }}>\n        <ResponsiveContainer\n          minHeight={125} minWidth={250}\n          aspect={2.5} width=\"100%\">\n          <LineChart data={data}\n            margin={{ top: 5, right: 30, left: 5, bottom: 5 }}>>\n            <Line type=\"monotone\" dataKey=\"total\" stroke=\"#FF5900\" />\n            <Line type=\"monotone\" dataKey=\"active\" stroke=\"#A78C04\" />\n            <Line type=\"monotone\" dataKey=\"recovered\" stroke=\"#27A704\" />\n            <Line type=\"monotone\" dataKey=\"deaths\" stroke=\"#000000\" />\n            <Line type=\"monotone\" dataKey=\"critical\" stroke=\"#FF0000\" />\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis tickFormatter={tick => {\n              return new Intl.NumberFormat('en-US', { notation: \"compact\", compactDisplay: \"short\" }).format(tick)\n            }} />\n            <Tooltip />\n            <Legend />\n          </LineChart>\n        </ResponsiveContainer>\n      )\n      return (\n        <div className=\"box box-history\">\n          <div style={{ textAlign: 'end' }}>\n            <button className=\"pure-button button-closecountry\"\n              onClick={(e) => this.props.handleCloseCountry(this.props.country)}>X</button>\n          </div>\n          <h2>{this.props.country === \"All\" ? \"World\" : this.props.country}</h2>\n          {renderLineChart}\n          <footer className=\"fetchInfo\">\n            Data obtained from <a href=\"https://rapidapi.com/api-sports/api/covid-193\">api-sports</a> at {new Date(timestamp).toUTCString()}\n          </footer>\n        </div>\n      )\n    }\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Covid19Monitor />\n    {/* <CheckboxesTags /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}